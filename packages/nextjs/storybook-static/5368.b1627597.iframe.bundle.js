"use strict";(self.webpackChunk_se_2_nextjs=self.webpackChunk_se_2_nextjs||[]).push([[5368],{"./node_modules/viem/_esm/actions/wallet/getCallsStatus.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>getCallsStatus});var _utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/utils/data/slice.js"),_utils_data_trim_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/viem/_esm/utils/data/trim.js"),_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/viem/_esm/utils/encoding/fromHex.js"),_utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/viem/_esm/utils/formatters/transactionReceipt.js"),_sendCalls_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/viem/_esm/actions/wallet/sendCalls.js");async function getCallsStatus(client,parameters){const{atomic=!1,chainId,receipts,version="2.0.0",...response}=await async function getStatus(id){if(id.endsWith(_sendCalls_js__WEBPACK_IMPORTED_MODULE_4__.vB.slice(2))){const chainId=(0,_utils_data_trim_js__WEBPACK_IMPORTED_MODULE_1__.B)((0,_utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__.iN)(id,-64,-32)),hashes=(0,_utils_data_slice_js__WEBPACK_IMPORTED_MODULE_0__.iN)(id,0,-64).slice(2).match(/.{1,64}/g),receipts=await Promise.all(hashes.map(hash=>_sendCalls_js__WEBPACK_IMPORTED_MODULE_4__.BH.slice(2)!==hash?client.request({method:"eth_getTransactionReceipt",params:[`0x${hash}`]},{dedupe:!0}):void 0)),status=receipts.some(r=>null===r)?100:receipts.every(r=>"0x1"===r?.status)?200:receipts.every(r=>"0x0"===r?.status)?500:600;return{atomic:!1,chainId:(0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.ME)(chainId),receipts:receipts.filter(Boolean),status,version:"2.0.0"}}return client.request({method:"wallet_getCallsStatus",params:[id]})}(parameters.id),[status,statusCode]=(()=>{const statusCode=response.status;return statusCode>=100&&statusCode<200?["pending",statusCode]:statusCode>=200&&statusCode<300?["success",statusCode]:statusCode>=300&&statusCode<700?["failure",statusCode]:"CONFIRMED"===statusCode?["success",200]:"PENDING"===statusCode?["pending",100]:[void 0,statusCode]})();return{...response,atomic,chainId:chainId?(0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.ME)(chainId):void 0,receipts:receipts?.map(receipt=>({...receipt,blockNumber:(0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.uU)(receipt.blockNumber),gasUsed:(0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_2__.uU)(receipt.gasUsed),status:_utils_formatters_transactionReceipt_js__WEBPACK_IMPORTED_MODULE_3__.Lj[receipt.status]}))??[],statusCode,status,version}}},"./node_modules/viem/_esm/actions/wallet/prepareAuthorization.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>prepareAuthorization});var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/accounts/utils/parseAccount.js"),_errors_account_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/viem/_esm/errors/account.js"),_utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/viem/_esm/utils/address/isAddressEqual.js"),_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/viem/_esm/utils/getAction.js"),_public_getChainId_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/viem/_esm/actions/public/getChainId.js"),_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/viem/_esm/actions/public/getTransactionCount.js");async function prepareAuthorization(client,parameters){const{account:account_=client.account,chainId,nonce}=parameters;if(!account_)throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.T({docsPath:"/docs/eip7702/prepareAuthorization"});const account=(0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.J)(account_),executor=(()=>{if(parameters.executor)return"self"===parameters.executor?parameters.executor:(0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.J)(parameters.executor)})(),authorization={address:parameters.contractAddress??parameters.address,chainId,nonce};return void 0===authorization.chainId&&(authorization.chainId=client.chain?.id??await(0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.T)(client,_public_getChainId_js__WEBPACK_IMPORTED_MODULE_4__.T,"getChainId")({})),void 0===authorization.nonce&&(authorization.nonce=await(0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.T)(client,_public_getTransactionCount_js__WEBPACK_IMPORTED_MODULE_5__.y,"getTransactionCount")({address:account.address,blockTag:"pending"}),("self"===executor||executor?.address&&(0,_utils_address_isAddressEqual_js__WEBPACK_IMPORTED_MODULE_2__.h)(executor.address,account.address))&&(authorization.nonce+=1)),authorization}},"./node_modules/viem/_esm/actions/wallet/sendCalls.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BH:()=>fallbackTransactionErrorMagicIdentifier,vB:()=>fallbackMagicIdentifier,yM:()=>sendCalls});var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/accounts/utils/parseAccount.js"),_errors_base_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/viem/_esm/errors/base.js"),_errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/viem/_esm/errors/rpc.js"),_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/viem/_esm/utils/abi/encodeFunctionData.js"),_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/viem/_esm/utils/data/concat.js"),_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/viem/_esm/utils/encoding/fromHex.js"),_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/viem/_esm/utils/encoding/toHex.js"),_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/viem/_esm/utils/errors/getTransactionError.js"),_sendTransaction_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/viem/_esm/actions/wallet/sendTransaction.js");const fallbackMagicIdentifier="0x5792579257925792579257925792579257925792579257925792579257925792",fallbackTransactionErrorMagicIdentifier=(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.cK)(0,{size:32});async function sendCalls(client,parameters){const{account:account_=client.account,capabilities,chain=client.chain,experimental_fallback,experimental_fallbackDelay=32,forceAtomic=!1,id,version="2.0.0"}=parameters,account=account_?(0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.J)(account_):null,calls=parameters.calls.map(call_=>{const call=call_,data=call.abi?(0,_utils_abi_encodeFunctionData_js__WEBPACK_IMPORTED_MODULE_3__.p)({abi:call.abi,functionName:call.functionName,args:call.args}):call.data;return{data:call.dataSuffix&&data?(0,_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__.xW)([data,call.dataSuffix]):data,to:call.to,value:call.value?(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.cK)(call.value):void 0}});try{const response=await client.request({method:"wallet_sendCalls",params:[{atomicRequired:forceAtomic,calls,capabilities,chainId:(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.cK)(chain.id),from:account?.address,id,version}]},{retryCount:0});return"string"==typeof response?{id:response}:response}catch(err){const error=err;if(experimental_fallback&&("MethodNotFoundRpcError"===error.name||"MethodNotSupportedRpcError"===error.name||"UnknownRpcError"===error.name||error.details.toLowerCase().includes("does not exist / is not available")||error.details.toLowerCase().includes("missing or invalid. request()")||error.details.toLowerCase().includes("did not match any variant of untagged enum")||error.details.toLowerCase().includes("account upgraded to unsupported contract")||error.details.toLowerCase().includes("eip-7702 not supported")||error.details.toLowerCase().includes("unsupported wc_ method")||error.details.toLowerCase().includes("feature toggled misconfigured"))){if(capabilities){if(Object.values(capabilities).some(capability=>!capability.optional)){const message="non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.";throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.L5(new _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.C(message,{details:message}))}}if(forceAtomic&&calls.length>1){const message="`forceAtomic` is not supported on fallback to `eth_sendTransaction`.";throw new _errors_rpc_js__WEBPACK_IMPORTED_MODULE_2__.jz(new _errors_base_js__WEBPACK_IMPORTED_MODULE_1__.C(message,{details:message}))}const promises=[];for(const call of calls){const promise=(0,_sendTransaction_js__WEBPACK_IMPORTED_MODULE_8__.v)(client,{account,chain,data:call.data,to:call.to,value:call.value?(0,_utils_encoding_fromHex_js__WEBPACK_IMPORTED_MODULE_5__.uU)(call.value):void 0});promises.push(promise),experimental_fallbackDelay>0&&await new Promise(resolve=>setTimeout(resolve,experimental_fallbackDelay))}const results=await Promise.allSettled(promises);if(results.every(r=>"rejected"===r.status))throw results[0].reason;const hashes=results.map(result=>"fulfilled"===result.status?result.value:fallbackTransactionErrorMagicIdentifier);return{id:(0,_utils_data_concat_js__WEBPACK_IMPORTED_MODULE_4__.xW)([...hashes,(0,_utils_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_6__.cK)(chain.id,{size:32}),fallbackMagicIdentifier])}}throw(0,_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_7__.p)(err,{...parameters,account,chain:parameters.chain})}}},"./node_modules/viem/_esm/actions/wallet/sendTransaction.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>sendTransaction});var _accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/accounts/utils/parseAccount.js"),_errors_account_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/viem/_esm/errors/account.js"),_errors_base_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/viem/_esm/errors/base.js"),_utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js"),_utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/viem/_esm/utils/chain/assertCurrentChain.js"),_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/viem/_esm/utils/errors/getTransactionError.js"),_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/viem/_esm/utils/formatters/extract.js"),_utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/viem/_esm/utils/formatters/transactionRequest.js"),_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/viem/_esm/utils/getAction.js"),_utils_lru_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/viem/_esm/utils/lru.js"),_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/viem/_esm/utils/transaction/assertRequest.js"),_public_getChainId_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/viem/_esm/actions/public/getChainId.js"),_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js"),_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/viem/_esm/actions/wallet/sendRawTransaction.js");const supportsWalletNamespace=new _utils_lru_js__WEBPACK_IMPORTED_MODULE_9__.A(128);async function sendTransaction(client,parameters){const{account:account_=client.account,chain=client.chain,accessList,authorizationList,blobs,data,gas,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,nonce,type,value,...rest}=parameters;if(void 0===account_)throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.T({docsPath:"/docs/actions/wallet/sendTransaction"});const account=account_?(0,_accounts_utils_parseAccount_js__WEBPACK_IMPORTED_MODULE_0__.J)(account_):null;try{(0,_utils_transaction_assertRequest_js__WEBPACK_IMPORTED_MODULE_10__.c)(parameters);const to=await(async()=>parameters.to?parameters.to:null!==parameters.to&&authorizationList&&authorizationList.length>0?await(0,_utils_authorization_recoverAuthorizationAddress_js__WEBPACK_IMPORTED_MODULE_3__.g)({authorization:authorizationList[0]}).catch(()=>{throw new _errors_base_js__WEBPACK_IMPORTED_MODULE_2__.C("`to` is required. Could not infer from `authorizationList`.")}):void 0)();if("json-rpc"===account?.type||null===account){let chainId;null!==chain&&(chainId=await(0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.T)(client,_public_getChainId_js__WEBPACK_IMPORTED_MODULE_11__.T,"getChainId")({}),(0,_utils_chain_assertCurrentChain_js__WEBPACK_IMPORTED_MODULE_4__.v)({currentChainId:chainId,chain}));const chainFormat=client.chain?.formatters?.transactionRequest?.format,request=(chainFormat||_utils_formatters_transactionRequest_js__WEBPACK_IMPORTED_MODULE_7__.Bv)({...(0,_utils_formatters_extract_js__WEBPACK_IMPORTED_MODULE_6__.o)(rest,{format:chainFormat}),accessList,authorizationList,blobs,chainId,data,from:account?.address,gas,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,nonce,to,type,value}),isWalletNamespaceSupported=supportsWalletNamespace.get(client.uid),method=isWalletNamespaceSupported?"wallet_sendTransaction":"eth_sendTransaction";try{return await client.request({method,params:[request]},{retryCount:0})}catch(e){if(!1===isWalletNamespaceSupported)throw e;const error=e;if("InvalidInputRpcError"===error.name||"InvalidParamsRpcError"===error.name||"MethodNotFoundRpcError"===error.name||"MethodNotSupportedRpcError"===error.name)return await client.request({method:"wallet_sendTransaction",params:[request]},{retryCount:0}).then(hash=>(supportsWalletNamespace.set(client.uid,!0),hash)).catch(e=>{const walletNamespaceError=e;if("MethodNotFoundRpcError"===walletNamespaceError.name||"MethodNotSupportedRpcError"===walletNamespaceError.name)throw supportsWalletNamespace.set(client.uid,!1),error;throw walletNamespaceError});throw error}}if("local"===account?.type){const request=await(0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.T)(client,_prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__.ft,"prepareTransactionRequest")({account,accessList,authorizationList,blobs,chain,data,gas,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,nonce,nonceManager:account.nonceManager,parameters:[..._prepareTransactionRequest_js__WEBPACK_IMPORTED_MODULE_12__.MM,"sidecars"],type,value,...rest,to}),serializer=chain?.serializers?.transaction,serializedTransaction=await account.signTransaction(request,{serializer});return await(0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_8__.T)(client,_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_13__.L,"sendRawTransaction")({serializedTransaction})}if("smart"===account?.type)throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.Z({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"});throw new _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.Z({docsPath:"/docs/actions/wallet/sendTransaction",type:account?.type})}catch(err){if(err instanceof _errors_account_js__WEBPACK_IMPORTED_MODULE_1__.Z)throw err;throw(0,_utils_errors_getTransactionError_js__WEBPACK_IMPORTED_MODULE_5__.p)(err,{...parameters,account,chain:parameters.chain||void 0})}}},"./node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>waitForCallsStatus});var base=__webpack_require__("./node_modules/viem/_esm/errors/base.js");class BundleFailedError extends base.C{constructor(result){super(`Call bundle failed with status: ${result.statusCode}`,{name:"BundleFailedError"}),Object.defineProperty(this,"result",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.result=result}}var observe=__webpack_require__("./node_modules/viem/_esm/utils/observe.js"),poll=__webpack_require__("./node_modules/viem/_esm/utils/poll.js"),withResolvers=__webpack_require__("./node_modules/viem/_esm/utils/promise/withResolvers.js"),withRetry=__webpack_require__("./node_modules/viem/_esm/utils/promise/withRetry.js"),stringify=__webpack_require__("./node_modules/viem/_esm/utils/stringify.js"),getCallsStatus=__webpack_require__("./node_modules/viem/_esm/actions/wallet/getCallsStatus.js");async function waitForCallsStatus(client,parameters){const{id,pollingInterval=client.pollingInterval,status=({statusCode})=>200===statusCode||statusCode>=300,retryCount=4,retryDelay=({count})=>200*(1<<count),timeout=6e4,throwOnFailure=!1}=parameters,observerId=(0,stringify.A)(["waitForCallsStatus",client.uid,id]),{promise,resolve,reject}=(0,withResolvers.Y)();let timer;const unobserve=(0,observe.lB)(observerId,{resolve,reject},emit=>{const unpoll=(0,poll.w)(async()=>{const done=fn=>{clearTimeout(timer),unpoll(),fn(),unobserve()};try{const result=await(0,withRetry.b)(async()=>{const result=await(0,getCallsStatus.k)(client,{id});if(throwOnFailure&&"failure"===result.status)throw new BundleFailedError(result);return result},{retryCount,delay:retryDelay});if(!status(result))return;done(()=>emit.resolve(result))}catch(error){done(()=>emit.reject(error))}},{interval:pollingInterval,emitOnBegin:!0});return unpoll});return timer=timeout?setTimeout(()=>{unobserve(),clearTimeout(timer),reject(new WaitForCallsStatusTimeoutError({id}))},timeout):void 0,await promise}class WaitForCallsStatusTimeoutError extends base.C{constructor({id}){super(`Timed out while waiting for call bundle with id "${id}" to be confirmed.`,{name:"WaitForCallsStatusTimeoutError"})}}},"./node_modules/viem/_esm/utils/chain/assertCurrentChain.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>assertCurrentChain});var _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/errors/chain.js");function assertCurrentChain({chain,currentChainId}){if(!chain)throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.jF;if(currentChainId!==chain.id)throw new _errors_chain_js__WEBPACK_IMPORTED_MODULE_0__.EH({chain,currentChainId})}},"./node_modules/viem/_esm/utils/errors/getTransactionError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>getTransactionError});var _errors_node_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/viem/_esm/errors/node.js"),_errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/viem/_esm/errors/transaction.js"),_getNodeError_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/viem/_esm/utils/errors/getNodeError.js");function getTransactionError(err,{docsPath,...args}){const cause=(()=>{const cause=(0,_getNodeError_js__WEBPACK_IMPORTED_MODULE_2__.l)(err,args);return cause instanceof _errors_node_js__WEBPACK_IMPORTED_MODULE_0__.RM?err:cause})();return new _errors_transaction_js__WEBPACK_IMPORTED_MODULE_1__.$s(cause,{docsPath,...args})}}}]);